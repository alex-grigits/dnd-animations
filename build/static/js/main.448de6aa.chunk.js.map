{"version":3,"sources":["Components/Stream.js","Components/Card.js","Components/Hand.js","Components/PreGameBets.js","Components/Panel.js","Components/Hud.js","App.js","index.js"],"names":["Stream","props","className","Card","title","id","useSpring","x","y","set","useState","drag","setDrag","bind","useGesture","onDrag","down","movement","mx","my","dragging","onDragStart","onDragEnd","div","style","config","mass","tension","friction","Hand","cardList","cards","trail","useTrail","length","opacity","from","map","index","rest","key","transform","interpolate","PreGameBets","data","Panel","start","setCards","useEffect","Hud","setGameStart","setGameEnd","onClick","App","setStart","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.448de6aa.chunk.js","sourcesContent":["// Core\nimport React from 'react';\n\n// Components\nimport './Stream.css';\n\nconst Stream = (props) => {\n    return (\n        <div className = 'stream'>\n            Stream\n        </div>\n    );\n};\n\nexport { Stream };\n","// Core\nimport React, { useState } from 'react';\nimport { useSpring, animated } from 'react-spring'\nimport { useGesture } from 'react-use-gesture'\n\n// Components\nimport './Card.css';\n\nconst Card = (props) => {\n    // Props\n    const { title, id } = props;\n    const [{ x, y }, set] = useSpring(() => ({ x: 0, y: 0 }));\n    // State\n    const [ drag, setDrag ] = useState(false);\n\n    const bind = useGesture({\n        onDrag: ({ down, movement: [mx, my], dragging }) => {\n            set({ x: down ? mx : 0, y: down ? my : 0 });\n        },\n        onDragStart: ({ dragging }) => setDrag(dragging),\n        onDragEnd: ({ dragging }) => setDrag(dragging),\n    });\n\n    return (\n        <animated.div {...bind()} style={{ x, y }}>\n            <div\n                className = {`card ${ drag ? 'moved' : ''}`}\n            >{ title }</div>\n        </animated.div>\n    );\n};\n\nexport { Card };\n","// Core\nimport React from 'react';\nimport { useTrail, animated } from 'react-spring';\n\n// Components\nimport './Hand.css';\nimport { Card } from './Card';\n\nconst config = { mass: 10, tension: 1200, friction: 150 };\n\nconst Hand = (props) => {\n    // Props\n    const { cards } = props;\n\n    const trail = useTrail(cards.length, {\n        config,\n        opacity: cards.length > 0 ? 1 : 0,\n        x:       cards.length > 0 ? 0 : 400,\n        from:    { opacity: 0, x: 400 },\n    });\n\n    const renderCardGroup = (cardList) => {\n        return trail.map(({ x, ...rest }, index) => {\n            return index < cardList.length\n                ? <animated.div\n                    key = { index }\n                    style = { { ...rest, transform: x.interpolate((x) => `translate3d(0,${x}px,0)`) } }>\n                    <Card\n                        title = { cardList[index].title }\n                        key = { cardList[index].id }\n                        id = { cardList[index].id }\n                    />\n                </animated.div>\n                : null;\n        });\n    };\n    \n    return (\n        <div className = 'hand'>\n            {\n                renderCardGroup(cards)\n            }\n        </div>\n    );\n};\n\nexport { Hand };\n","// Core\nimport React from 'react';\n\n// Components\nimport './PreGameBets.css';\n\nconst PreGameBets = (props) => {\n    return (\n        <div className = 'pre-game-bets'>\n            <div id = 'first-bet'>Bet 1</div>\n            <div id = 'second-bet'>Bet 2</div>\n        </div>\n    );\n};\n\nexport { PreGameBets };\n","// Core\nimport React, { useEffect, useState } from 'react';\n\n// Components\nimport './Panel.css';\nimport { Hand } from './Hand';\nimport { PreGameBets } from './PreGameBets';\n\n// Data\nconst data = [\n    { id: 1, title: 'First' },\n    { id: 2, title: 'Second' },\n    { id: 3, title: 'Third' },\n    { id: 4, title: 'Fourth' },\n    { id: 5, title: 'Fifth' }\n]\n\nconst Panel = (props) => {\n    // Props\n    const { start } = props;\n    // State\n    const [ cards, setCards ] = useState([]);\n\n    useEffect(() => {\n        if (start) {\n            setCards(data);\n        } else {\n            setCards([]);\n        }\n        \n    }, [ start ])\n\n    return (\n        <div className = 'panel'>\n            <Hand cards = { cards }></Hand>\n            <PreGameBets></PreGameBets>\n        </div>\n    );\n};\n\nexport { Panel };\n","// Core\nimport React from 'react';\n\n// Components\nimport './Hud.css';\n\nconst Hud = (props) => {\n    const { start, setGameStart, setGameEnd } = props;\n\n    const _handleClick = () => {\n        if (start) {\n            setGameEnd();\n        } else {\n            setGameStart();\n        }\n    }\n    return (\n        <div className = 'hud'>\n            <button onClick = { _handleClick }>\n                { start ? 'End' : 'Start' }\n            </button>\n        </div>\n    );\n};\n\nexport { Hud };\n","import React, { useState } from 'react';\nimport './App.css';\n\n// Components\nimport { Stream } from './Components/Stream';\nimport { Panel } from './Components/Panel';\nimport { Hud } from './Components/Hud';\n\nfunction App() {\n  // State\n  const [ start, setStart ] = useState(false);\n\n  const setGameStart = () => {\n    setStart(true);\n  }\n\n  const setGameEnd = () => {\n    setStart(false);\n  }\n\n  return (\n    <div className = 'main'>\n      <Hud\n        start = { start }\n        setGameStart = { setGameStart }\n        setGameEnd = { setGameEnd }\n      />\n      <Stream />\n      <Panel start = { start } />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}